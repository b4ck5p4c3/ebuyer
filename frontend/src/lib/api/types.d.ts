/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/shops": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all shops */
        get: operations["ShopsController_findAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/shop/{shopInternalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all unfulfilled items by shop */
        get: operations["ItemsController_findAllUnfulfilledByShop"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create item */
        post: operations["ItemsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/items/{itemId}/buy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** @description Update item bought counter */
        patch: operations["ItemsController_buyItem"];
        trace?: never;
    };
    "/api/items/{itemId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** @description Cancel item */
        patch: operations["ItemsController_cancelItem"];
        trace?: never;
    };
    "/api/auth/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get self member auth info */
        get: operations["AuthController_getSelf"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ShopDTO: {
            /** Format: uuid */
            id: string;
            internalId: string;
            name: string;
        };
        ErrorApiResponse: {
            statusCode: number;
            message: string;
        };
        ItemDTO: {
            /** Format: uuid */
            id: string;
            title: string;
            comment?: string;
            sku?: string;
            imageUrl?: string;
            itemUrl?: string;
            price?: string;
            requiredCount: number;
            boughtCount: number;
            /** @enum {string} */
            status: "created" | "canceled" | "fulfilled";
            additionalData?: Record<string, never>;
        };
        CreateItemDTO: {
            shopInternalId: string;
            title: string;
            comment?: string;
            sku?: string;
            imageUrl?: string;
            itemUrl?: string;
            price?: string;
            requiredCount: number;
            additionalData?: Record<string, never>;
        };
        BuyItemDTO: {
            additionalBoughtCount: number;
        };
        SelfAuthInfoDTO: {
            /** Format: uuid */
            id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    ShopsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShopDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ItemsController_findAllUnfulfilledByShop: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                shopInternalId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ItemsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateItemDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ItemsController_buyItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itemId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BuyItemDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ItemsController_cancelItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itemId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    AuthController_getSelf: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SelfAuthInfoDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
}
